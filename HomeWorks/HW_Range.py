# Напишите код, который принимает на входе число X и выводит квадраты чисел от 1 до X.
# Каждое значение необходимо выводить с новой строки.
# Используйте для ввода строчку a = int(input())

a = int(input())

for i in list(range(1, a + 1)):
    print(i ** 2)

# Не нужно использовать Range(). Это задание для работы со списками, но в предыдущем уроке можно разместить максимум 16 шагов.
# Напишите код, который на входе принимает список с названием фильмов, через пробел.
# Выводите на печать названия фильмов с длиной более 5 символов.
# Каждое значение необходимо выводить с новой строки.
# Используйте данную строчку для ввода данных, формирующих список:
# films = input().split()

films = input().split()

for i in films:
    if len(i) > 5:
        print(i)

# Не нужно использовать Range().
# Это задание для работы со списками, но в предыдущем уроке можно разместить максимум 16 шагов.
# Напишите код, который на входе принимает список с названием фильмов, через пробел.
# Выводите на печать количество элементов, которое содержит четное количество символов (количество символов - это количество букв в слове, например "Джокер" - 6 букв, четное, "Побег" - 5 букв, нечетное.
# Используйте данную строчку для ввода данных, формирующих список:
films = input().split()
films = input().split()

quantity = 0
for i in films:
    if len(i) % 2 == 0:
        quantity += 1
    else:
        continue
print(quantity)

# Не нужно использовать Range().
# Это задание для работы со списками, но в предыдущем уроке можно разместить максимум 16 шагов.
# Напишите код, который на входе принимает список где все элементы имеют тип данных СТРОКА, через пробел.
# Выводите на печать длину списка в символах, из расчета:
# Например
# "Джокер" - 6 символов
# "7" - 7 символов
# Используйте данную строчку для ввода данных, формирующих список:
# films = input().split()

films = input().split()
total_length = 0
for film in films:
    if film.isdigit():
        total_length += int(film)
    else:
        total_length += len(film)
print(total_length)

# Не нужно использовать Range().
# Это задание для работы со списками, но в предыдущем уроке можно разместить максимум 16 шагов.
# Напишите код, который на входе принимает список с числами, через пробел.
# Посчитайте, сколько в нем пар элементов, равных друг другу.
# Считается, что любые два элемента, равные друг другу образуют одну пару, которую необходимо посчитать.
# Не нужно использовать Range(). Это задание для работы со списками, но в предыдущем уроке можно разместить максимум 16 шагов.
# Напишите код, который на входе принимает список с числами, через пробел.
# Посчитайте, сколько в нем пар элементов, равных друг другу.
# Считается, что любые два элемента, равные друг другу образуют одну пару, которую необходимо посчитать.

# Например:
# 2, 4, 2, 1, 5, 1, 7
# Считаем пары:
# 2 - 2 шт
# 4 - 1 шт
# 1- 2 шт
# 5 - 1 шт
# 7 - 1 шт
# Итого пар в списке:
# 2
# Используйте данную строчку для ввода данных, формирующих список:
# numbers = list(map(int, input().split()))

numbers = list(map(int, input().split()))
counted = []
pair_count = 0

for num in numbers:
    if num not in counted:
        same_count = numbers.count(num)
        pair_count += same_count // 2
        counted.append(num)

print(pair_count)

# Не нужно использовать Range().
# Это задание для работы со списками, но в предыдущем уроке можно разместить максимум 16 шагов.
# Напишите код, который на входе принимает список с названием файлов, через пробел.
# Выводите на печать все файлы с форматом .py.
# Каждое значение необходимо выводить с новой строки.
# Используйте данную строчку для ввода данных, формирующих список:
# files = input().split()

files = input().split()

for file in files:
    if file.endswith(".py"):
        print(file)
    else:
        continue