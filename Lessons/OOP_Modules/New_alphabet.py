from Lessons.OOP_Modules.Base_class import Alphabet, Cyrillic

russian = Alphabet("Русский", "RU", "абвгдеёжзийклмнопрстуфхцчшщъыьэюя")
russian.description()
russian.count_letter()


serbian = Cyrillic("Сербский", "SR", "абвгдђежзијклмнњопрстћуфхцчџшыэ")
serbian.description()
serbian.count_letter()

# Результат:
# Новый алфавит создан
# Название данного алфавита - Русский, его аббревиатура - RU, список букв - абвгдеёжзийклмнопрстуфхцчшщъыьэюя
# Количество букв в алфавите равно: 33
# Новый алфавит создан
# Название данного алфавита - Сербский, группа языков - Cyrl,его аббревиатура - SR, список букв - абвгдђежзијклмнњопрстћуфхцчџшыэ
# Количество букв в алфавите равно: 31

# В данном модуле Мы сперва импортировали из модуля base_class.py необходимые нам классы, а далее уже создали их экземпляры.
#
# Модульность в ООП позволяет создавать более структурированные и управляемые приложения.
# Использование классов и наследования способствует улучшению читаемости кода,
# его повторного использования и упрощает процесс разработки.
