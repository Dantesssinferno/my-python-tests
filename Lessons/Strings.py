# var_1 = "Hello "
# var_2 = "World "
# var_3 = "I'm automated QA"
# result = var_1 + var_2 + var_3
#
# print("Результат: " + str(result))


# Строковый тип данных (str) является одним из основных типов данных в Python.
# Строки представляют собой последовательность символов Unicode и широко используются для хранения и обработки текстовой информации.
# В этой лекции Мы рассмотрим основные особенности строкового типа данных и операции, которые можно выполнять со строками в Python.
# Как Мы уже рассматривали ранее, строки могут быть заключены в одинарные ( ' ), двойные ( " ), или тройные ( ''' или """ )

# Мы можем производить сложение строк:
var_1 = 'Hello '
var_2 = 'World'
print(var_1 + var_2)
# Так же производить конкатенацию строк.
first_name = 'Иван'
last_name = 'Петров'
full_name = first_name + ' ' + last_name
print(first_name + ' ' + last_name)

# Результат: Иван Петров

# age = 30
# info = 'Мой возраст ' + age

# Результат: Ошибка: TypeError: can only concatenate str (not "int") to str
# Чтобы избежать ошибки, необходимо преобразовать значение age в строку, например, с помощью функции str():

age = 30
info = 'Мой возраст ' + str(age)
print(info)
# Результат: Мой возраст 30
# Отдельные символы в строке можно получить, используя индексацию.
# Индексация в Python начинается с 0, то есть первый символ будет начинаться с 0, а не с 1, как Мы привыкли в жизни
name = 'Иван'
print(name[0])
# Результат: И
print(name[3])
# Результат: Н