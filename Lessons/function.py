# Функции в Python - это именованные блоки кода, которые выполняют определенную задачу.
# Они позволяют разбивать программу на более мелкие, управляемые части, что делает код более организованным, читаемым и повторно используемым.

# Функция без параметров
num_1 = 5
num_2 = 10

def summ():    # Объявление функции
    result = num_1 + num_2
    print(result)

summ()    # Вызов функции

# Результат: 15

# В этом примере Мы определили функцию summ(), которая производит сложение двух переменных и выводит их на печать
# Чтобы использовать функцию, нужно ее вызвать.
# Это делается путем указания имени функции, за которым следуют аргументы (если есть) в круглых скобках.

# Мы можем прописывать часть значений в самой функции, например:
num_2 = 5

def summ():
    num_3 = 10
    result = num_1 + num_3
    print(result)

summ()

# Результат: 15

# или же сразу прописать значение num_2 в арифметической операции:
num_1 = 5
def summ():
    result = num_1 + 10
    print(result)

summ()
# Результат: 15

# Функция с параметрами
# Мы также можем создавать функции, которые будут включать обязательные параметры, которые нам необходимо будет указать при ее вызове.
def summ(num_1, num_2):
    result = num_1 + num_2
    print(result)

summ(5, 10)    # Вызов функции с указанием значений num_1 и num_2

# Результат: 15

# Рассмотрим как это работает - в примере Выше,
# Мы объявляли значение переменных num_1 и num_2  перед вызовом функции summ(), в данном примере,
# Мы прописываем при создании функции, что она обязательно должна принимать в себя два этих значения def summ(num_1, num_2), то есть для нее они являются обязательными и если не указать хотя бы одно значение, то система выдаст ошибку:
# def summ(num_1, num_2):
#     result = num_1 + num_2
#     print(result)
#
# summ(5)

# Результат: TypeError: summ() missing 1 required positional argument: 'num_2'

# Возврат значений
# Функции могут не только выводить информацию, но и возвращать значения.
# Для этого используется ключевое слово return.
def summ(num_1, num_2):
    result = num_1 + num_2
    return result


result_print = summ(5, 10)
print(result_print)

# Результат: 15
# В этом примере функция summ() возвращает переменную result = сумму двух чисел.
# Если бы Мы просто вызвали функцию, без print(), то ничего бы не произошло, система бы вернула переменную result и Мы ничего не увидели бы:
def summ(num_1, num_2):
    result = num_1 + num_2
    return result


summ(5, 10)

# Результат:
# Но если Нам необходимо это вывести на печать, то тут либо Мы создаем новую переменную, которая вызывает функцию summ() и далее эту переменную помещаем в функцию print():

result_print = summ(5, 10)
print(result_print)
# Или же пропускаем создание новой переменной, что экономит нашу память, и производим вызов функции summ() прямо в функции print():

print(summ(5, 10))

# Параметры функции
# Функции могут принимать параметры, которые передаются в скобках при вызове функции. Параметры могут быть как обязательными, так и необязательными (со значениями по умолчанию).
# Рассмотрим на примере
def greet(name, message="Привет"):
    print(f"{message}, {name}!")


greet("Иван")
greet("Мария", "Здравствуйте")

# Результат: Привет, Иван!

# Результат: Здравствуйте, Мария!
# В этом примере функция greet() имеет два параметра: name (обязательный) и message (необязательный, со значением по умолчанию "Привет").  И в зависимости от того, указали ли Мы при ее вызове второй параметр, то значение переменной message и подставится.
# Функции в Python являются мощным инструментом для организации и структурирования кода. Они позволяют разбивать программу на более управляемые и повторно используемые части, что делает код более читаемым, модульным и легче для поддержки.
