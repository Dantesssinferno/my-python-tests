# Глобальный уровень (Global): Это область видимости, в которой находятся переменные,
# определенные на верхнем уровне вашего модуля (файла).

# Локальный уровень (Local): Это область видимости, в которой находятся переменные,
# определенные внутри функций или других блоков кода.

# Правила областей видимости
# Python следует простым правилам при поиске переменных:

# Система сначала ищет переменную в локальной области видимости.
# Если переменная не найдена в локальной области, Python ищет ее в глобальной области.
# Если переменная все еще не найдена, возникает ошибка NameError.
# Рассмотрим несколько примеров:
num = 33 # Глобальная переменная

def my_function():
    num = 10 # Локальная переменная
    print(f"Внутри функции num = {num}")
my_function()
print(f"Вне функции num = {num}")

# Результат: Внутри функции num = 10
# Результат: Вне функции num = 5
# В этом примере Мы определили глобальную переменную num со значением 5.
# Внутри функции my_function() Мы определили локальную переменную num со значением 10.
# Когда Мы вызываем функцию, она использует локальную переменную num, а когда Мы выводим значение num вне функции, оно берется из глобальной области.

# Рассмотрим еще один пример, как Мы можем использовать это на практике:
# У нас имеется мини программа, которая приветствует пользователя.
# Она представляет собой функцию, которая принимает переменную name, если при вызове функции, Мы не указываем имя пользователя, то она обращается к нему по дефолтному имени, беря значение из глобальной переменной name = "Друг",
# если же при вызове функции Мы указываем имя пользователя, то она обращается к нему по тому значению, что Мы передаем.

name = "Maksim Sergey"

def greet (name):
    print(f"Привет, {name}!")

greet(name)
greet("Ivan")
# Результат: Привет, Maksim Sergey
# Результат: Привет, Ivan